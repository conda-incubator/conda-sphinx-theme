[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "conda_sphinx_theme"
dynamic = ["version"]
description = "Conda theme for Sphinx"
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE"}
authors = [
    {name = "Travs Hathaway"},
]
classifiers = [
    "Framework :: Sphinx :: Theme",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Documentation",
    "Topic :: Documentation :: Sphinx",
]
dependencies = [
    "pydata-sphinx-theme>=0.15",
    "sphinx-favicon",
]

[project.urls]
homepage = "https://github.com/conda-incubator/conda-sphinx-theme/"
repository = "https://github.com/conda-incubator/conda-sphinx-theme"

# http://www.sphinx-doc.org/en/stable/theming.html#distribute-your-theme-as-a-python-package
[project.entry-points."sphinx.html_themes"]
conda_sphinx_theme = "conda_sphinx_theme"

[tool.setuptools]
packages = ["conda_sphinx_theme"]
zip-safe = false

[tool.setuptools_scm]
version_file = "conda_sphinx_theme/_version.py"

[tool.setuptools.package-data]
conda_sphinx_theme = [
    "theme.conf",
    "*.html",
    "static/css/*.css",
    "static/js/*.js",
    "static/fonts/*.*",
    "static/*.svg",
    "static/*.ico",
    "_templates/*.html",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "--cov=conda_sphinx_theme",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-branch",
    "--cov-fail-under=85",
    "-v"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
source = ["conda_sphinx_theme"]
branch = true
omit = [
    "*/tests/*",
    "*/_version.py",
    "*/setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

[tool.pixi.workspace]
channels = ["conda-forge", "https://conda.anaconda.org/conda-forge/label/ty_alpha"]
platforms = ["linux-64", "osx-64", "osx-arm64", "win-64"]

[tool.pixi.dependencies]
# Shared base dependencies that work across all Python versions
pytest = ">=8.0.0"
pytest-mock = ">=3.10.0"
docutils = ">=0.21.0"
ruff = "*"
ty = "*"
prek = "*"

[tool.pixi.pypi-dependencies]
conda-sphinx-theme = { path = ".", editable = true }

# Test feature with version-specific test dependencies
[tool.pixi.feature.test.dependencies]
pytest-cov = ">=6.0.0"  # Use 6.x for compatibility with Python 3.9

# Development feature with Python 3.13+ and modern Sphinx
[tool.pixi.feature.dev.dependencies]
python = ">=3.13"
sphinx = ">=8.0.0"
pytest-cov = ">=7.0.0"

# Python version-specific features (only specify Python version)
[tool.pixi.feature.py39.dependencies]
python = "3.9.*"
sphinx = ">=7.0.0,<8.0.0"  # Sphinx 7.x supports Python 3.9

[tool.pixi.feature.py310.dependencies]
python = "3.10.*"
sphinx = ">=8.0.0,<8.2.0"  # Sphinx 8.0-8.1 supports Python 3.10

[tool.pixi.feature.py311.dependencies]
python = "3.11.*"
sphinx = ">=8.0.0"

[tool.pixi.feature.py312.dependencies]
python = "3.12.*"
sphinx = ">=8.0.0"

[tool.pixi.feature.py313.dependencies]
python = "3.13.*"
sphinx = ">=8.0.0"

[tool.pixi.environments]
default = ["dev"]
test-py39 = ["test", "py39"]
test-py310 = ["test", "py310"]
test-py311 = ["test", "py311"]
test-py312 = ["test", "py312"]
test-py313 = ["test", "py313"]

[tool.pixi.tasks]
# Testing
test = "python -m pytest"
test-fast = "python -m pytest --no-cov"
# Linting and type checking
lint = "ruff check conda_sphinx_theme/ tests/"
lint-fix = "ruff check --fix conda_sphinx_theme/ tests/"
type-check = "ty check conda_sphinx_theme/"
# Git hooks
hooks-install = "prek install"
hooks-run = "prek run"
hooks-update = "prek autoupdate"
# Cleanup
clean = "rm -rf .pytest_cache htmlcov .coverage coverage.xml build/ dist/ *.egg-info/"
# CI pipeline
ci = { depends-on = ["lint", "type-check", "test"] }
